plugins {
	id 'com.github.johnrengelman.shadow' version '5.2.0'
	id 'application'
}

/*add music dependencies
 * ogg libraries: vorbisspi1.0.2.jar, tritonus_share.jar, jorbis-0.0.15.jar, jogg-0.0.7.jar
 * mp3 libraries: jl1.0.1.jar, tritonus_share.jar, mp3spi1.9.5.jar
 */
String[] lgplDependencies = new String[] {
		"javazoom:jlayer:1.0.1",
		"com.googlecode.soundlibs:tritonus-share:0.3.7.4",
		"com.googlecode.soundlibs:mp3spi:1.9.5.4",
		"com.googlecode.soundlibs:vorbisspi:1.0.3.3",
		"org.jcraft:jorbis:0.0.17",
		"de.jarnbjo:j-ogg-all:1.0.0",
}

configurations {
	lgplDeps
}

startScripts {
	applicationName = "jsettlers.main.swing"
}

mainClassName = 'jsettlers.main.swing.SwingManagedJSettlers'

dependencies {
	implementation project(':go.graphics')
	implementation project(':go.graphics.swing')
	implementation project(':jsettlers.common')
	implementation project(':jsettlers.graphics')
	implementation project(':jsettlers.logic')
	implementation project(':jsettlers.network')
	implementation 'com.google.code.gson:gson:2.8.5'
	// TODO: check license
	//implementation group: 'com.googlecode.soundlibs', name: 'mp3spi', version: '1.9.5.4'

	for (String lpglDependency : lgplDependencies) {
		lgplDeps lpglDependency
	}
}

application {
	//applicationDefaultJvmArgs = ['-Dorg.lwjgl.util.Debug=true']
}

tasks.withType(JavaExec) {
	if (System.getProperty('DEBUG', 'false') == 'true') {
		jvmArgs '-Xdebug', '-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=9099'
	}
}

task copyDependencies(type: Copy) {
	from configurations.lgplDeps
	into new File(buildDir, 'libs/dependencies')
}

jar {
	manifest {
		attributes 'Main-Class': mainClassName
		attributes 'Class-Path' : lgplDependencies.collect() {"dependencies/" + it}.join(' ');

	}
}

shadowJar {
	archiveBaseName = 'JSettlers'
	classifier = ''

	dependsOn copyDependencies
}
